State 104 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 $@1: %empty

    2 program: PROGRAM ID '(' identifier_list ')' ';' $@1 declarations subprogram_declarations compound_statement '.'

    3 identifier_list: ID
    4                | identifier_list ',' ID
    5                | empty

    6 declarations: declarations VAR identifier_list ':' type ';'
    7             | empty

    8 type: standard_type
    9     | ARRAY '[' INUM DOTDOT INUM ']' OF standard_type

   10 standard_type: INTEGER
   11              | REAL

   12 subprogram_declarations: subprogram_declarations subprogram_declaration ';'
   13                        | empty

   14 subprogram_declaration: subprogram_head declarations subprogram_declarations compound_statement

   15 $@2: %empty

   16 subprogram_head: FUNCTION ID $@2 arguments ':' standard_type ';'

   17 $@3: %empty

   18 subprogram_head: PROCEDURE ID $@3 arguments ';'

   19 arguments: '(' parameter_list ')'
   20          | empty

   21 parameter_list: identifier_list ':' type
   22               | parameter_list ';' identifier_list ':' type

   23 compound_statement: BBEGIN optional_statements END

   24 optional_statements: statement_list
   25                    | empty

   26 statement_list: statement
   27               | statement_list ';' statement

   28 statement: matched_statement
   29          | unmatched_statement

   30 matched_statement: procedure_statement
   31                  | variable ASSIGNOP expression
   32                  | compound_statement
   33                  | IF expression THEN matched_statement ELSE matched_statement
   34                  | WHILE expression DO statement
   35                  | FOR variable ASSIGNOP expression TO expression DO statement

   36 unmatched_statement: IF expression THEN statement
   37                    | IF expression THEN matched_statement ELSE unmatched_statement

   38 variable: ID
   39         | ID '[' expression ']'

   40 procedure_statement: ID
   41                    | ID '(' expression_list ')'

   42 expression_list: expression
   43                | expression_list ',' expression
   44                | empty

   45 expression: simple_expression
   46           | simple_expression RELOP simple_expression

   47 simple_expression: term
   48                  | ADDOP term
   49                  | simple_expression ADDOP term

   50 term: factor
   51     | term MULOP factor

   52 factor: ID
   53       | ID '(' expression_list ')'
   54       | ID '[' expression ']'
   55       | INUM
   56       | RNUM
   57       | '(' expression ')'
   58       | NOT factor

   59 empty: %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 2 19 41 53 57
')' (41) 2 19 41 53 57
',' (44) 4 43
'.' (46) 2
':' (58) 6 16 21 22
';' (59) 2 6 12 16 18 22 27
'[' (91) 9 39 54
']' (93) 9 39 54
error (256)
PROGRAM (258) 2
VAR (259) 6
ARRAY (260) 9
OF (261) 9
INTEGER (262) 10
REAL (263) 11
FUNCTION (264) 16
PROCEDURE (265) 18
BBEGIN (266) 23
END (267) 23
ASSIGNOP (268) 31 35
IF (269) 33 36 37
THEN (270) 33 36 37
ELSE (271) 33 37
WHILE (272) 34
FOR (273) 35
DO (274) 34 35
TO (275) 35
DOTDOT (276) 9
ID (277) 2 3 4 16 18 38 39 40 41 52 53 54
INUM (278) 9 55
RNUM (279) 56
ADDOP (280) 48 49
MULOP (281) 51
RELOP (282) 46
NOT (283) 58


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
program (38)
    on left: 2, on right: 0
$@1 (39)
    on left: 1, on right: 2
identifier_list (40)
    on left: 3 4 5, on right: 2 4 6 21 22
declarations (41)
    on left: 6 7, on right: 2 6 14
type (42)
    on left: 8 9, on right: 6 21 22
standard_type (43)
    on left: 10 11, on right: 8 9 16
subprogram_declarations (44)
    on left: 12 13, on right: 2 12 14
subprogram_declaration (45)
    on left: 14, on right: 12
subprogram_head (46)
    on left: 16 18, on right: 14
$@2 (47)
    on left: 15, on right: 16
$@3 (48)
    on left: 17, on right: 18
arguments (49)
    on left: 19 20, on right: 16 18
parameter_list (50)
    on left: 21 22, on right: 19 22
compound_statement (51)
    on left: 23, on right: 2 14 32
optional_statements (52)
    on left: 24 25, on right: 23
statement_list (53)
    on left: 26 27, on right: 24 27
statement (54)
    on left: 28 29, on right: 26 27 34 35 36
matched_statement (55)
    on left: 30 31 32 33 34 35, on right: 28 33 37
unmatched_statement (56)
    on left: 36 37, on right: 29 37
variable (57)
    on left: 38 39, on right: 31 35
procedure_statement (58)
    on left: 40 41, on right: 30
expression_list (59)
    on left: 42 43 44, on right: 41 43 53
expression (60)
    on left: 45 46, on right: 31 33 34 35 36 37 39 42 43 54 57
simple_expression (61)
    on left: 47 48 49, on right: 45 46 49
term (62)
    on left: 50 51, on right: 47 48 49 51
factor (63)
    on left: 52 53 54 55 56 57 58, on right: 50 51 58
empty (64)
    on left: 59, on right: 5 7 13 20 25 44


State 0

    0 $accept: . program $end

    PROGRAM  shift, and go to state 1

    program  go to state 2


State 1

    2 program: PROGRAM . ID '(' identifier_list ')' ';' $@1 declarations subprogram_declarations compound_statement '.'

    ID  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    2 program: PROGRAM ID . '(' identifier_list ')' ';' $@1 declarations subprogram_declarations compound_statement '.'

    '('  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    2 program: PROGRAM ID '(' . identifier_list ')' ';' $@1 declarations subprogram_declarations compound_statement '.'

    ID  shift, and go to state 6

    $default  reduce using rule 59 (empty)

    identifier_list  go to state 7
    empty            go to state 8


State 6

    3 identifier_list: ID .

    $default  reduce using rule 3 (identifier_list)


State 7

    2 program: PROGRAM ID '(' identifier_list . ')' ';' $@1 declarations subprogram_declarations compound_statement '.'
    4 identifier_list: identifier_list . ',' ID

    ')'  shift, and go to state 9
    ','  shift, and go to state 10


State 8

    5 identifier_list: empty .

    $default  reduce using rule 5 (identifier_list)


State 9

    2 program: PROGRAM ID '(' identifier_list ')' . ';' $@1 declarations subprogram_declarations compound_statement '.'

    ';'  shift, and go to state 11


State 10

    4 identifier_list: identifier_list ',' . ID

    ID  shift, and go to state 12


State 11

    2 program: PROGRAM ID '(' identifier_list ')' ';' . $@1 declarations subprogram_declarations compound_statement '.'

    $default  reduce using rule 1 ($@1)

    $@1  go to state 13


State 12

    4 identifier_list: identifier_list ',' ID .

    $default  reduce using rule 4 (identifier_list)


State 13

    2 program: PROGRAM ID '(' identifier_list ')' ';' $@1 . declarations subprogram_declarations compound_statement '.'

    $default  reduce using rule 59 (empty)

    declarations  go to state 14
    empty         go to state 15


State 14

    2 program: PROGRAM ID '(' identifier_list ')' ';' $@1 declarations . subprogram_declarations compound_statement '.'
    6 declarations: declarations . VAR identifier_list ':' type ';'

    VAR  shift, and go to state 16

    $default  reduce using rule 59 (empty)

    subprogram_declarations  go to state 17
    empty                    go to state 18


State 15

    7 declarations: empty .

    $default  reduce using rule 7 (declarations)


State 16

    6 declarations: declarations VAR . identifier_list ':' type ';'

    ID  shift, and go to state 6

    $default  reduce using rule 59 (empty)

    identifier_list  go to state 19
    empty            go to state 8


State 17

    2 program: PROGRAM ID '(' identifier_list ')' ';' $@1 declarations subprogram_declarations . compound_statement '.'
   12 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'

    FUNCTION   shift, and go to state 20
    PROCEDURE  shift, and go to state 21
    BBEGIN     shift, and go to state 22

    subprogram_declaration  go to state 23
    subprogram_head         go to state 24
    compound_statement      go to state 25


State 18

   13 subprogram_declarations: empty .

    $default  reduce using rule 13 (subprogram_declarations)


State 19

    4 identifier_list: identifier_list . ',' ID
    6 declarations: declarations VAR identifier_list . ':' type ';'

    ','  shift, and go to state 10
    ':'  shift, and go to state 26


State 20

   16 subprogram_head: FUNCTION . ID $@2 arguments ':' standard_type ';'

    ID  shift, and go to state 27


State 21

   18 subprogram_head: PROCEDURE . ID $@3 arguments ';'

    ID  shift, and go to state 28


State 22

   23 compound_statement: BBEGIN . optional_statements END

    BBEGIN  shift, and go to state 22
    IF      shift, and go to state 29
    WHILE   shift, and go to state 30
    FOR     shift, and go to state 31
    ID      shift, and go to state 32

    $default  reduce using rule 59 (empty)

    compound_statement   go to state 33
    optional_statements  go to state 34
    statement_list       go to state 35
    statement            go to state 36
    matched_statement    go to state 37
    unmatched_statement  go to state 38
    variable             go to state 39
    procedure_statement  go to state 40
    empty                go to state 41


State 23

   12 subprogram_declarations: subprogram_declarations subprogram_declaration . ';'

    ';'  shift, and go to state 42


State 24

   14 subprogram_declaration: subprogram_head . declarations subprogram_declarations compound_statement

    $default  reduce using rule 59 (empty)

    declarations  go to state 43
    empty         go to state 15


State 25

    2 program: PROGRAM ID '(' identifier_list ')' ';' $@1 declarations subprogram_declarations compound_statement . '.'

    '.'  shift, and go to state 44


State 26

    6 declarations: declarations VAR identifier_list ':' . type ';'

    ARRAY    shift, and go to state 45
    INTEGER  shift, and go to state 46
    REAL     shift, and go to state 47

    type           go to state 48
    standard_type  go to state 49


State 27

   16 subprogram_head: FUNCTION ID . $@2 arguments ':' standard_type ';'

    $default  reduce using rule 15 ($@2)

    $@2  go to state 50


State 28

   18 subprogram_head: PROCEDURE ID . $@3 arguments ';'

    $default  reduce using rule 17 ($@3)

    $@3  go to state 51


State 29

   33 matched_statement: IF . expression THEN matched_statement ELSE matched_statement
   36 unmatched_statement: IF . expression THEN statement
   37                    | IF . expression THEN matched_statement ELSE unmatched_statement

    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    ADDOP  shift, and go to state 55
    NOT    shift, and go to state 56
    '('    shift, and go to state 57

    expression         go to state 58
    simple_expression  go to state 59
    term               go to state 60
    factor             go to state 61


State 30

   34 matched_statement: WHILE . expression DO statement

    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    ADDOP  shift, and go to state 55
    NOT    shift, and go to state 56
    '('    shift, and go to state 57

    expression         go to state 62
    simple_expression  go to state 59
    term               go to state 60
    factor             go to state 61


State 31

   35 matched_statement: FOR . variable ASSIGNOP expression TO expression DO statement

    ID  shift, and go to state 63

    variable  go to state 64


State 32

   38 variable: ID .
   39         | ID . '[' expression ']'
   40 procedure_statement: ID .
   41                    | ID . '(' expression_list ')'

    '('  shift, and go to state 65
    '['  shift, and go to state 66

    ASSIGNOP  reduce using rule 38 (variable)
    $default  reduce using rule 40 (procedure_statement)


State 33

   32 matched_statement: compound_statement .

    $default  reduce using rule 32 (matched_statement)


State 34

   23 compound_statement: BBEGIN optional_statements . END

    END  shift, and go to state 67


State 35

   24 optional_statements: statement_list .
   27 statement_list: statement_list . ';' statement

    ';'  shift, and go to state 68

    $default  reduce using rule 24 (optional_statements)


State 36

   26 statement_list: statement .

    $default  reduce using rule 26 (statement_list)


State 37

   28 statement: matched_statement .

    $default  reduce using rule 28 (statement)


State 38

   29 statement: unmatched_statement .

    $default  reduce using rule 29 (statement)


State 39

   31 matched_statement: variable . ASSIGNOP expression

    ASSIGNOP  shift, and go to state 69


State 40

   30 matched_statement: procedure_statement .

    $default  reduce using rule 30 (matched_statement)


State 41

   25 optional_statements: empty .

    $default  reduce using rule 25 (optional_statements)


State 42

   12 subprogram_declarations: subprogram_declarations subprogram_declaration ';' .

    $default  reduce using rule 12 (subprogram_declarations)


State 43

    6 declarations: declarations . VAR identifier_list ':' type ';'
   14 subprogram_declaration: subprogram_head declarations . subprogram_declarations compound_statement

    VAR  shift, and go to state 16

    $default  reduce using rule 59 (empty)

    subprogram_declarations  go to state 70
    empty                    go to state 18


State 44

    2 program: PROGRAM ID '(' identifier_list ')' ';' $@1 declarations subprogram_declarations compound_statement '.' .

    $default  reduce using rule 2 (program)


State 45

    9 type: ARRAY . '[' INUM DOTDOT INUM ']' OF standard_type

    '['  shift, and go to state 71


State 46

   10 standard_type: INTEGER .

    $default  reduce using rule 10 (standard_type)


State 47

   11 standard_type: REAL .

    $default  reduce using rule 11 (standard_type)


State 48

    6 declarations: declarations VAR identifier_list ':' type . ';'

    ';'  shift, and go to state 72


State 49

    8 type: standard_type .

    $default  reduce using rule 8 (type)


State 50

   16 subprogram_head: FUNCTION ID $@2 . arguments ':' standard_type ';'

    '('  shift, and go to state 73

    $default  reduce using rule 59 (empty)

    arguments  go to state 74
    empty      go to state 75


State 51

   18 subprogram_head: PROCEDURE ID $@3 . arguments ';'

    '('  shift, and go to state 73

    $default  reduce using rule 59 (empty)

    arguments  go to state 76
    empty      go to state 75


State 52

   52 factor: ID .
   53       | ID . '(' expression_list ')'
   54       | ID . '[' expression ']'

    '('  shift, and go to state 77
    '['  shift, and go to state 78

    $default  reduce using rule 52 (factor)


State 53

   55 factor: INUM .

    $default  reduce using rule 55 (factor)


State 54

   56 factor: RNUM .

    $default  reduce using rule 56 (factor)


State 55

   48 simple_expression: ADDOP . term

    ID    shift, and go to state 52
    INUM  shift, and go to state 53
    RNUM  shift, and go to state 54
    NOT   shift, and go to state 56
    '('   shift, and go to state 57

    term    go to state 79
    factor  go to state 61


State 56

   58 factor: NOT . factor

    ID    shift, and go to state 52
    INUM  shift, and go to state 53
    RNUM  shift, and go to state 54
    NOT   shift, and go to state 56
    '('   shift, and go to state 57

    factor  go to state 80


State 57

   57 factor: '(' . expression ')'

    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    ADDOP  shift, and go to state 55
    NOT    shift, and go to state 56
    '('    shift, and go to state 57

    expression         go to state 81
    simple_expression  go to state 59
    term               go to state 60
    factor             go to state 61


State 58

   33 matched_statement: IF expression . THEN matched_statement ELSE matched_statement
   36 unmatched_statement: IF expression . THEN statement
   37                    | IF expression . THEN matched_statement ELSE unmatched_statement

    THEN  shift, and go to state 82


State 59

   45 expression: simple_expression .
   46           | simple_expression . RELOP simple_expression
   49 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 83
    RELOP  shift, and go to state 84

    $default  reduce using rule 45 (expression)


State 60

   47 simple_expression: term .
   51 term: term . MULOP factor

    MULOP  shift, and go to state 85

    $default  reduce using rule 47 (simple_expression)


State 61

   50 term: factor .

    $default  reduce using rule 50 (term)


State 62

   34 matched_statement: WHILE expression . DO statement

    DO  shift, and go to state 86


State 63

   38 variable: ID .
   39         | ID . '[' expression ']'

    '['  shift, and go to state 66

    $default  reduce using rule 38 (variable)


State 64

   35 matched_statement: FOR variable . ASSIGNOP expression TO expression DO statement

    ASSIGNOP  shift, and go to state 87


State 65

   41 procedure_statement: ID '(' . expression_list ')'

    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    ADDOP  shift, and go to state 55
    NOT    shift, and go to state 56
    '('    shift, and go to state 57

    $default  reduce using rule 59 (empty)

    expression_list    go to state 88
    expression         go to state 89
    simple_expression  go to state 59
    term               go to state 60
    factor             go to state 61
    empty              go to state 90


State 66

   39 variable: ID '[' . expression ']'

    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    ADDOP  shift, and go to state 55
    NOT    shift, and go to state 56
    '('    shift, and go to state 57

    expression         go to state 91
    simple_expression  go to state 59
    term               go to state 60
    factor             go to state 61


State 67

   23 compound_statement: BBEGIN optional_statements END .

    $default  reduce using rule 23 (compound_statement)


State 68

   27 statement_list: statement_list ';' . statement

    BBEGIN  shift, and go to state 22
    IF      shift, and go to state 29
    WHILE   shift, and go to state 30
    FOR     shift, and go to state 31
    ID      shift, and go to state 32

    compound_statement   go to state 33
    statement            go to state 92
    matched_statement    go to state 37
    unmatched_statement  go to state 38
    variable             go to state 39
    procedure_statement  go to state 40


State 69

   31 matched_statement: variable ASSIGNOP . expression

    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    ADDOP  shift, and go to state 55
    NOT    shift, and go to state 56
    '('    shift, and go to state 57

    expression         go to state 93
    simple_expression  go to state 59
    term               go to state 60
    factor             go to state 61


State 70

   12 subprogram_declarations: subprogram_declarations . subprogram_declaration ';'
   14 subprogram_declaration: subprogram_head declarations subprogram_declarations . compound_statement

    FUNCTION   shift, and go to state 20
    PROCEDURE  shift, and go to state 21
    BBEGIN     shift, and go to state 22

    subprogram_declaration  go to state 23
    subprogram_head         go to state 24
    compound_statement      go to state 94


State 71

    9 type: ARRAY '[' . INUM DOTDOT INUM ']' OF standard_type

    INUM  shift, and go to state 95


State 72

    6 declarations: declarations VAR identifier_list ':' type ';' .

    $default  reduce using rule 6 (declarations)


State 73

   19 arguments: '(' . parameter_list ')'

    ID  shift, and go to state 6

    $default  reduce using rule 59 (empty)

    identifier_list  go to state 96
    parameter_list   go to state 97
    empty            go to state 8


State 74

   16 subprogram_head: FUNCTION ID $@2 arguments . ':' standard_type ';'

    ':'  shift, and go to state 98


State 75

   20 arguments: empty .

    $default  reduce using rule 20 (arguments)


State 76

   18 subprogram_head: PROCEDURE ID $@3 arguments . ';'

    ';'  shift, and go to state 99


State 77

   53 factor: ID '(' . expression_list ')'

    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    ADDOP  shift, and go to state 55
    NOT    shift, and go to state 56
    '('    shift, and go to state 57

    $default  reduce using rule 59 (empty)

    expression_list    go to state 100
    expression         go to state 89
    simple_expression  go to state 59
    term               go to state 60
    factor             go to state 61
    empty              go to state 90


State 78

   54 factor: ID '[' . expression ']'

    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    ADDOP  shift, and go to state 55
    NOT    shift, and go to state 56
    '('    shift, and go to state 57

    expression         go to state 101
    simple_expression  go to state 59
    term               go to state 60
    factor             go to state 61


State 79

   48 simple_expression: ADDOP term .
   51 term: term . MULOP factor

    MULOP  shift, and go to state 85

    $default  reduce using rule 48 (simple_expression)


State 80

   58 factor: NOT factor .

    $default  reduce using rule 58 (factor)


State 81

   57 factor: '(' expression . ')'

    ')'  shift, and go to state 102


State 82

   33 matched_statement: IF expression THEN . matched_statement ELSE matched_statement
   36 unmatched_statement: IF expression THEN . statement
   37                    | IF expression THEN . matched_statement ELSE unmatched_statement

    BBEGIN  shift, and go to state 22
    IF      shift, and go to state 29
    WHILE   shift, and go to state 30
    FOR     shift, and go to state 31
    ID      shift, and go to state 32

    compound_statement   go to state 33
    statement            go to state 103
    matched_statement    go to state 104
    unmatched_statement  go to state 38
    variable             go to state 39
    procedure_statement  go to state 40


State 83

   49 simple_expression: simple_expression ADDOP . term

    ID    shift, and go to state 52
    INUM  shift, and go to state 53
    RNUM  shift, and go to state 54
    NOT   shift, and go to state 56
    '('   shift, and go to state 57

    term    go to state 105
    factor  go to state 61


State 84

   46 expression: simple_expression RELOP . simple_expression

    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    ADDOP  shift, and go to state 55
    NOT    shift, and go to state 56
    '('    shift, and go to state 57

    simple_expression  go to state 106
    term               go to state 60
    factor             go to state 61


State 85

   51 term: term MULOP . factor

    ID    shift, and go to state 52
    INUM  shift, and go to state 53
    RNUM  shift, and go to state 54
    NOT   shift, and go to state 56
    '('   shift, and go to state 57

    factor  go to state 107


State 86

   34 matched_statement: WHILE expression DO . statement

    BBEGIN  shift, and go to state 22
    IF      shift, and go to state 29
    WHILE   shift, and go to state 30
    FOR     shift, and go to state 31
    ID      shift, and go to state 32

    compound_statement   go to state 33
    statement            go to state 108
    matched_statement    go to state 37
    unmatched_statement  go to state 38
    variable             go to state 39
    procedure_statement  go to state 40


State 87

   35 matched_statement: FOR variable ASSIGNOP . expression TO expression DO statement

    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    ADDOP  shift, and go to state 55
    NOT    shift, and go to state 56
    '('    shift, and go to state 57

    expression         go to state 109
    simple_expression  go to state 59
    term               go to state 60
    factor             go to state 61


State 88

   41 procedure_statement: ID '(' expression_list . ')'
   43 expression_list: expression_list . ',' expression

    ')'  shift, and go to state 110
    ','  shift, and go to state 111


State 89

   42 expression_list: expression .

    $default  reduce using rule 42 (expression_list)


State 90

   44 expression_list: empty .

    $default  reduce using rule 44 (expression_list)


State 91

   39 variable: ID '[' expression . ']'

    ']'  shift, and go to state 112


State 92

   27 statement_list: statement_list ';' statement .

    $default  reduce using rule 27 (statement_list)


State 93

   31 matched_statement: variable ASSIGNOP expression .

    $default  reduce using rule 31 (matched_statement)


State 94

   14 subprogram_declaration: subprogram_head declarations subprogram_declarations compound_statement .

    $default  reduce using rule 14 (subprogram_declaration)


State 95

    9 type: ARRAY '[' INUM . DOTDOT INUM ']' OF standard_type

    DOTDOT  shift, and go to state 113


State 96

    4 identifier_list: identifier_list . ',' ID
   21 parameter_list: identifier_list . ':' type

    ','  shift, and go to state 10
    ':'  shift, and go to state 114


State 97

   19 arguments: '(' parameter_list . ')'
   22 parameter_list: parameter_list . ';' identifier_list ':' type

    ')'  shift, and go to state 115
    ';'  shift, and go to state 116


State 98

   16 subprogram_head: FUNCTION ID $@2 arguments ':' . standard_type ';'

    INTEGER  shift, and go to state 46
    REAL     shift, and go to state 47

    standard_type  go to state 117


State 99

   18 subprogram_head: PROCEDURE ID $@3 arguments ';' .

    $default  reduce using rule 18 (subprogram_head)


State 100

   43 expression_list: expression_list . ',' expression
   53 factor: ID '(' expression_list . ')'

    ')'  shift, and go to state 118
    ','  shift, and go to state 111


State 101

   54 factor: ID '[' expression . ']'

    ']'  shift, and go to state 119


State 102

   57 factor: '(' expression ')' .

    $default  reduce using rule 57 (factor)


State 103

   36 unmatched_statement: IF expression THEN statement .

    $default  reduce using rule 36 (unmatched_statement)


State 104

   28 statement: matched_statement .
   33 matched_statement: IF expression THEN matched_statement . ELSE matched_statement
   37 unmatched_statement: IF expression THEN matched_statement . ELSE unmatched_statement

    ELSE  shift, and go to state 120

    ELSE      [reduce using rule 28 (statement)]
    $default  reduce using rule 28 (statement)


State 105

   49 simple_expression: simple_expression ADDOP term .
   51 term: term . MULOP factor

    MULOP  shift, and go to state 85

    $default  reduce using rule 49 (simple_expression)


State 106

   46 expression: simple_expression RELOP simple_expression .
   49 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 83

    $default  reduce using rule 46 (expression)


State 107

   51 term: term MULOP factor .

    $default  reduce using rule 51 (term)


State 108

   34 matched_statement: WHILE expression DO statement .

    $default  reduce using rule 34 (matched_statement)


State 109

   35 matched_statement: FOR variable ASSIGNOP expression . TO expression DO statement

    TO  shift, and go to state 121


State 110

   41 procedure_statement: ID '(' expression_list ')' .

    $default  reduce using rule 41 (procedure_statement)


State 111

   43 expression_list: expression_list ',' . expression

    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    ADDOP  shift, and go to state 55
    NOT    shift, and go to state 56
    '('    shift, and go to state 57

    expression         go to state 122
    simple_expression  go to state 59
    term               go to state 60
    factor             go to state 61


State 112

   39 variable: ID '[' expression ']' .

    $default  reduce using rule 39 (variable)


State 113

    9 type: ARRAY '[' INUM DOTDOT . INUM ']' OF standard_type

    INUM  shift, and go to state 123


State 114

   21 parameter_list: identifier_list ':' . type

    ARRAY    shift, and go to state 45
    INTEGER  shift, and go to state 46
    REAL     shift, and go to state 47

    type           go to state 124
    standard_type  go to state 49


State 115

   19 arguments: '(' parameter_list ')' .

    $default  reduce using rule 19 (arguments)


State 116

   22 parameter_list: parameter_list ';' . identifier_list ':' type

    ID  shift, and go to state 6

    $default  reduce using rule 59 (empty)

    identifier_list  go to state 125
    empty            go to state 8


State 117

   16 subprogram_head: FUNCTION ID $@2 arguments ':' standard_type . ';'

    ';'  shift, and go to state 126


State 118

   53 factor: ID '(' expression_list ')' .

    $default  reduce using rule 53 (factor)


State 119

   54 factor: ID '[' expression ']' .

    $default  reduce using rule 54 (factor)


State 120

   33 matched_statement: IF expression THEN matched_statement ELSE . matched_statement
   37 unmatched_statement: IF expression THEN matched_statement ELSE . unmatched_statement

    BBEGIN  shift, and go to state 22
    IF      shift, and go to state 29
    WHILE   shift, and go to state 30
    FOR     shift, and go to state 31
    ID      shift, and go to state 32

    compound_statement   go to state 33
    matched_statement    go to state 127
    unmatched_statement  go to state 128
    variable             go to state 39
    procedure_statement  go to state 40


State 121

   35 matched_statement: FOR variable ASSIGNOP expression TO . expression DO statement

    ID     shift, and go to state 52
    INUM   shift, and go to state 53
    RNUM   shift, and go to state 54
    ADDOP  shift, and go to state 55
    NOT    shift, and go to state 56
    '('    shift, and go to state 57

    expression         go to state 129
    simple_expression  go to state 59
    term               go to state 60
    factor             go to state 61


State 122

   43 expression_list: expression_list ',' expression .

    $default  reduce using rule 43 (expression_list)


State 123

    9 type: ARRAY '[' INUM DOTDOT INUM . ']' OF standard_type

    ']'  shift, and go to state 130


State 124

   21 parameter_list: identifier_list ':' type .

    $default  reduce using rule 21 (parameter_list)


State 125

    4 identifier_list: identifier_list . ',' ID
   22 parameter_list: parameter_list ';' identifier_list . ':' type

    ','  shift, and go to state 10
    ':'  shift, and go to state 131


State 126

   16 subprogram_head: FUNCTION ID $@2 arguments ':' standard_type ';' .

    $default  reduce using rule 16 (subprogram_head)


State 127

   33 matched_statement: IF expression THEN matched_statement ELSE matched_statement .

    $default  reduce using rule 33 (matched_statement)


State 128

   37 unmatched_statement: IF expression THEN matched_statement ELSE unmatched_statement .

    $default  reduce using rule 37 (unmatched_statement)


State 129

   35 matched_statement: FOR variable ASSIGNOP expression TO expression . DO statement

    DO  shift, and go to state 132


State 130

    9 type: ARRAY '[' INUM DOTDOT INUM ']' . OF standard_type

    OF  shift, and go to state 133


State 131

   22 parameter_list: parameter_list ';' identifier_list ':' . type

    ARRAY    shift, and go to state 45
    INTEGER  shift, and go to state 46
    REAL     shift, and go to state 47

    type           go to state 134
    standard_type  go to state 49


State 132

   35 matched_statement: FOR variable ASSIGNOP expression TO expression DO . statement

    BBEGIN  shift, and go to state 22
    IF      shift, and go to state 29
    WHILE   shift, and go to state 30
    FOR     shift, and go to state 31
    ID      shift, and go to state 32

    compound_statement   go to state 33
    statement            go to state 135
    matched_statement    go to state 37
    unmatched_statement  go to state 38
    variable             go to state 39
    procedure_statement  go to state 40


State 133

    9 type: ARRAY '[' INUM DOTDOT INUM ']' OF . standard_type

    INTEGER  shift, and go to state 46
    REAL     shift, and go to state 47

    standard_type  go to state 136


State 134

   22 parameter_list: parameter_list ';' identifier_list ':' type .

    $default  reduce using rule 22 (parameter_list)


State 135

   35 matched_statement: FOR variable ASSIGNOP expression TO expression DO statement .

    $default  reduce using rule 35 (matched_statement)


State 136

    9 type: ARRAY '[' INUM DOTDOT INUM ']' OF standard_type .

    $default  reduce using rule 9 (type)
